// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
*/
var Serialization = Serialization || {};

/**
 * @constructor
 */
Serialization.Point = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Serialization.Point}
 */
Serialization.Point.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns {number}
 */
Serialization.Point.prototype.row = function() {
  return this.bb.readInt32(this.bb_pos);
};

/**
 * @returns {number}
 */
Serialization.Point.prototype.column = function() {
  return this.bb.readInt32(this.bb_pos + 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} row
 * @param {number} column
 * @returns {flatbuffers.Offset}
 */
Serialization.Point.createPoint = function(builder, row, column) {
  builder.prep(4, 8);
  builder.writeInt32(column);
  builder.writeInt32(row);
  return builder.offset();
};

/**
 * @constructor
 */
Serialization.Range = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Serialization.Range}
 */
Serialization.Range.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {Serialization.Point=} obj
 * @returns {Serialization.Point}
 */
Serialization.Range.prototype.start = function(obj) {
  return (obj || new Serialization.Point).__init(this.bb_pos, this.bb);
};

/**
 * @param {Serialization.Point=} obj
 * @returns {Serialization.Point}
 */
Serialization.Range.prototype.end = function(obj) {
  return (obj || new Serialization.Point).__init(this.bb_pos + 8, this.bb);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} start_row
 * @param {number} start_column
 * @param {number} end_row
 * @param {number} end_column
 * @returns {flatbuffers.Offset}
 */
Serialization.Range.createRange = function(builder, start_row, start_column, end_row, end_column) {
  builder.prep(4, 16);
  builder.prep(4, 8);
  builder.writeInt32(end_column);
  builder.writeInt32(end_row);
  builder.prep(4, 8);
  builder.writeInt32(start_column);
  builder.writeInt32(start_row);
  return builder.offset();
};

/**
 * @constructor
 */
Serialization.Marker = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Serialization.Marker}
 */
Serialization.Marker.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Serialization.Marker=} obj
 * @returns {Serialization.Marker}
 */
Serialization.Marker.getRootAsMarker = function(bb, obj) {
  return (obj || new Serialization.Marker).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Serialization.Marker.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {Serialization.Range=} obj
 * @returns {Serialization.Range}
 */
Serialization.Marker.prototype.range = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Serialization.Range).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @returns {boolean}
 */
Serialization.Marker.prototype.reversed = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {boolean}
 */
Serialization.Marker.prototype.tailed = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @returns {boolean}
 */
Serialization.Marker.prototype.valid = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Serialization.Marker.prototype.invalidate = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Serialization.Marker.prototype.properties = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Serialization.Marker.startMarker = function(builder) {
  builder.startObject(7);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
Serialization.Marker.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} rangeOffset
 */
Serialization.Marker.addRange = function(builder, rangeOffset) {
  builder.addFieldStruct(1, rangeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} reversed
 */
Serialization.Marker.addReversed = function(builder, reversed) {
  builder.addFieldInt8(2, +reversed, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} tailed
 */
Serialization.Marker.addTailed = function(builder, tailed) {
  builder.addFieldInt8(3, +tailed, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} valid
 */
Serialization.Marker.addValid = function(builder, valid) {
  builder.addFieldInt8(4, +valid, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} invalidateOffset
 */
Serialization.Marker.addInvalidate = function(builder, invalidateOffset) {
  builder.addFieldOffset(5, invalidateOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} propertiesOffset
 */
Serialization.Marker.addProperties = function(builder, propertiesOffset) {
  builder.addFieldOffset(6, propertiesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Serialization.Marker.endMarker = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Serialization.MarkerLayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Serialization.MarkerLayer}
 */
Serialization.MarkerLayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Serialization.MarkerLayer=} obj
 * @returns {Serialization.MarkerLayer}
 */
Serialization.MarkerLayer.getRootAsMarkerLayer = function(bb, obj) {
  return (obj || new Serialization.MarkerLayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Serialization.MarkerLayer.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Serialization.Marker=} obj
 * @returns {Serialization.Marker}
 */
Serialization.MarkerLayer.prototype.markers = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Serialization.Marker).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Serialization.MarkerLayer.prototype.markersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Serialization.MarkerLayer.startMarkerLayer = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
Serialization.MarkerLayer.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} markersOffset
 */
Serialization.MarkerLayer.addMarkers = function(builder, markersOffset) {
  builder.addFieldOffset(1, markersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Serialization.MarkerLayer.createMarkersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Serialization.MarkerLayer.startMarkersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Serialization.MarkerLayer.endMarkerLayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Serialization.MarkersSnapshot = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Serialization.MarkersSnapshot}
 */
Serialization.MarkersSnapshot.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Serialization.MarkersSnapshot=} obj
 * @returns {Serialization.MarkersSnapshot}
 */
Serialization.MarkersSnapshot.getRootAsMarkersSnapshot = function(bb, obj) {
  return (obj || new Serialization.MarkersSnapshot).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {Serialization.MarkerLayer=} obj
 * @returns {Serialization.MarkerLayer}
 */
Serialization.MarkersSnapshot.prototype.markerLayers = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Serialization.MarkerLayer).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Serialization.MarkersSnapshot.prototype.markerLayersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Serialization.MarkersSnapshot.startMarkersSnapshot = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} markerLayersOffset
 */
Serialization.MarkersSnapshot.addMarkerLayers = function(builder, markerLayersOffset) {
  builder.addFieldOffset(0, markerLayersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Serialization.MarkersSnapshot.createMarkerLayersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Serialization.MarkersSnapshot.startMarkerLayersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Serialization.MarkersSnapshot.endMarkersSnapshot = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Serialization.MarkersSnapshot.finishMarkersSnapshotBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
module.exports = Serialization;
